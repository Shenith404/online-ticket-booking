name: CI - Build & Push Microservices Docker Images

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: env.production
    strategy:
      matrix:
        include:
          - service: auth-service
            context: ./online-tecket-booking/services/auth-service
            dockerfile: ./online-tecket-booking/services/auth-service/Dockerfile
          - service: booking-service
            context: ./online-tecket-booking/services/booking-service
            dockerfile: ./online-tecket-booking/services/booking-service/Dockerfile
          - service: event-service
            context: ./online-tecket-booking/services/event-service
            dockerfile: ./online-tecket-booking/services/event-service/Dockerfile
          - service: gateway
            context: ./online-tecket-booking/services/gateway
            dockerfile: ./online-tecket-booking/services/gateway/dockerfile
          - service: notification-service
            context: ./online-tecket-booking/services/notification-service
            dockerfile: ./online-tecket-booking/services/notification-service/Dockerfile
          - service: frontend
            context: ./online-tecket-booking/frontend
            dockerfile: ./online-tecket-booking/frontend/Dockerfile

    steps:
      # 1. Checkout repo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Docker login
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 3. Build & push Docker image for each service
      - name: Build and push ${{ matrix.service }}
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          file: ${{ matrix.dockerfile }}
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.service }}:latest
